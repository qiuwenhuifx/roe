(function(o,e){if(window.layui&&layui.define){layui.define(["jquery","coords"],function(o){var r=layui.$,i=layui.coords;o("collision",e(r,i))})}else if(typeof define==="function"&&define.amd){define("gridster-collision",["jquery","gridster-coords"],e)}else{o.GridsterCollision=e(o.$||o.jQuery,o.GridsterCoords)}})(this,function(y,o){var e={colliders_context:document.body,overlapping_region:"C"};function i(o,r,i){this.options=y.extend(e,i);this.$element=o;this.last_colliders=[];this.last_colliders_coords=[];this.set_colliders(r);this.init()}i.defaults=e;var r=i.prototype;r.init=function(){this.find_collisions()};r.overlaps=function(o,r){var i=false;var e=false;if(r.x1>=o.x1&&r.x1<=o.x2||r.x2>=o.x1&&r.x2<=o.x2||o.x1>=r.x1&&o.x2<=r.x2){i=true}if(r.y1>=o.y1&&r.y1<=o.y2||r.y2>=o.y1&&r.y2<=o.y2||o.y1>=r.y1&&o.y2<=r.y2){e=true}return i&&e};r.detect_overlapping_region=function(o,r){var i="";var e="";if(o.y1>r.cy&&o.y1<r.y2){i="N"}if(o.y2>r.y1&&o.y2<r.cy){i="S"}if(o.x1>r.cx&&o.x1<r.x2){e="W"}if(o.x2>r.x1&&o.x2<r.cx){e="E"}return i+e||"C"};r.calculate_overlapped_area_coords=function(o,r){var i=Math.max(o.x1,r.x1);var e=Math.max(o.y1,r.y1);var t=Math.min(o.x2,r.x2);var s=Math.min(o.y2,r.y2);return y({left:i,top:e,width:t-i,height:s-e}).coords().get()};r.calculate_overlapped_area=function(o){return o.width*o.height};r.manage_colliders_start_stop=function(o,r,i){var e=this.last_colliders_coords;for(var t=0,s=e.length;t<s;t++){if(y.inArray(e[t],o)===-1){r.call(this,e[t])}}for(var n=0,a=o.length;n<a;n++){if(y.inArray(o[n],e)===-1){i.call(this,o[n])}}};r.find_collisions=function(o){var r=this;var i=this.options.overlapping_region;var e=[];var t=[];var s=this.colliders||this.$colliders;var n=s.length;var a=r.$element.coords().update(o||false).get();while(n--){var l=r.$colliders?y(s[n]):s[n];var c=l.isCoords?l:l.coords();var d=c.get();var f=r.overlaps(a,d);if(!f){continue}var _=r.detect_overlapping_region(a,d);if(_===i||i==="all"){var u=r.calculate_overlapped_area_coords(a,d);var p=r.calculate_overlapped_area(u);var v={area:p,area_coords:u,region:_,coords:d,player_coords:a,el:l};if(r.options.on_overlap){r.options.on_overlap.call(this,v)}e.push(c);t.push(v)}}if(r.options.on_overlap_stop||r.options.on_overlap_start){this.manage_colliders_start_stop(e,r.options.on_overlap_start,r.options.on_overlap_stop)}this.last_colliders_coords=e;return t};r.get_closest_colliders=function(o){var r=this.find_collisions(o);r.sort(function(o,r){if(o.region==="C"&&r.region==="C"){if(o.coords.y1<r.coords.y1||o.coords.x1<r.coords.x1){return-1}else{return 1}}if(o.area<r.area){return 1}return 1});return r};r.set_colliders=function(o){if(typeof o==="string"||o instanceof y){this.$colliders=y(o,this.options.colliders_context).not(this.$element)}else{this.colliders=y(o)}};y.fn.collision=function(o,r){return new i(this,o,r)};return i});